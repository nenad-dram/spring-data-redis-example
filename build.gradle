plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.endyary'
version = '1.0.0'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'

    testCompileOnly 'org.projectlombok:lombok:1.18.28'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('extractBootJar', Copy) {
    dependsOn bootJar
    def zipFile = file("${buildDir}/libs/${rootProject.name}-${version}.jar")
    def outputDir = file("${buildDir}/layers")

    from zipTree(zipFile)
    into outputDir
}

tasks.register('dockerBuild') {
    dependsOn tasks.named("extractBootJar")
    doLast {
        exec {
            commandLine "sh", "-c", "(docker rm ${rootProject.name} || true) " +
                    "&& (docker rmi ${rootProject.name} || true)" +
                    "&& docker build -t ${rootProject.name} ."
        }
    }
}